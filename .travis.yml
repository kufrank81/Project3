language: node_js
node_js:
  - 12

services:
  - docker

before_install:
  - docker -v && docker-compose -v
  - sudo rm /usr/local/bin/docker-compose
  - sudo curl -L "https://github.com/docker/compose/releases/download/1.29.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose 
  - sudo chmod +x /usr/local/bin
  - sudo curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
  - sudo curl -LO "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
  - echo "$(<kubectl.sha256) kubectl" | sha256sum --check
  - sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
  - kubectl version --client
  - sudo mkdir ${HOME}/.kube
  #- echo "$KUBE_CONFIG" | base64 --decode > ${HOME}/.kube/config
  - sudo curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" 
  - sudo unzip awscliv2.zip
  - sudo ./aws/install
  - aws --version
  - echo "$AWS_PROFILE_BASE64" | base64 --decode > ${HOME}/.aws/credentials


# Pre-testing installs
install:
  - echo "nothing needs to be installed"

# Scripts to be run such as tests
before_script:
  - echo "no tests"
  - echo "$DOCKER_ENV" | base64 --decode > /deployment/.env

script:
  - docker --version # print the version for logging
  - cd front-end-service
  - docker build -t front-end-service .
  - docker tag front-end-service $DOCKER_USERNAME/front-end-service:latest
  - cd ../feed-service
  - docker build -t feed-service .
  - docker tag feed-service $DOCKER_USERNAME/feed-service:latest
  - cd ../user-service
  - docker build -t user-service .
  - docker tag user-service $DOCKER_USERNAME/user-service:latest
  - cd ../deployment
  - docker build -t udagram-reverse-proxy .
  - docker tag udagram-reverse-proxy $DOCKER_USERNAME/udagram-reverse-proxy:latest
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker push $DOCKER_USERNAME/front-end-service
  - docker push $DOCKER_USERNAME/feed-service
  - docker push $DOCKER_USERNAME/user-service
  - docker push $DOCKER_USERNAME/udagram-reverse-proxy
  - docker-compose -f docker-compose-build.yaml build --parallel
  - docker-compose -f docker-compose-build.yaml push
  - aws eks --region us-east-1 update-kubeconfig --name udagram-frank-dev
  

after_success:
  - kubectl apply -f kubeconfig.yaml
